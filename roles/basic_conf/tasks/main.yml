- name: Setup SSH option ChallengeResponseAuthentication
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: 'ChallengeResponseAuthentication'
    line: 'ChallengeResponseAuthentication no'
- name: Setup SSH option PasswordAuthentication
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: 'PasswordAuthentication'
    line: 'PasswordAuthentication  no'
- name: Setup SSH option PermitRootLogin
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: 'PermitRootLogin'
    line: 'PermitRootLogin no '
- name: Setup SSH option UsePAM
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: 'UsePAM'
    line: 'UsePAM  no'


- name: Add ssh rule to firewall
  community.general.ufw:
    rule: limit
    to_port: "ssh"
    proto: tcp
- name: Add http rule to firewall
  community.general.ufw:
    rule: allow
    to_port : "http"
    proto: tcp
- name: Add https rule to firewall
  community.general.ufw:
    rule: allow
    to_port : "https"
    proto: tcp
- name: Add custom rule for minecraft
  community.general.ufw:
    rule: allow
    to_port: "15571"
    proto: any
- name: open firewall on lan
  community.general.ufw:
    from_ip: 192.168.0.0/16
    rule: allow
    proto: any
- name: open firewall on tcp for docker interface
  community.general.ufw:
    from_ip: 10.5.0.0/16
    rule: allow
    proto: any
- name: open firewall on tcp for docker interface
  community.general.ufw:
    from_ip: 172.18.0.0/16
    rule: allow
    proto: tcp
- name: Enable firewall
  community.general.ufw:
    state: enabled
    policy: deny

- name: Mount Gros disque file system
  ansible.posix.mount:
    src: UUID=1985d0b0-8062-466e-a553-2f0f048644e7
    path: /mnt/gros_disque
    fstype: ext4
    state: mounted

- name: add udev rules for RTL-SDR dongle
  ansible.builtin.copy:
    src: ../files/rtl-sdr.rules
    dest: /etc/udev/rules.d/
    force: true

- name: add password as env var for rtl-sdr
  ansible.builtin.copy:
    src: ../secrets/rtl-sdr.sh
    dest: /etc/profile.d/
    force: true

- name: copy cron script
  ansible.builtin.copy:
    src: ../files/rtl_433_mqtt.sh
    dest: /home/yanck/
    force: true
    mode: u+rwx

- name: add cron for rtl-sdr
  ansible.builtin.cron:
    name: rtl-sdr-cron
    minute: '*/8'
    job: "BASH_ENV=/etc/profile /home/yanck/rtl_433_mqtt.sh 2>&1 | /usr/bin/logger -t CRONOUTPUT"
    state: absent

- name: Creates an entry like "PATH=/usr/local/bin:/usr/bin:/bin" on top of crontab
  ansible.builtin.cron:
    user: yanck
    name: PATH
    env: yes
    job: /usr/local/bin:/usr/bin:/bin

- name: add cron for rclone
  ansible.builtin.cron:
    user: yanck
    name: rclone-cron
    hour: 2
    minute: 0
    job: "rclone lsd proton_drive: && rclone sync /mnt/grosse_usb/hass/backups/ proton_drive:/hass/backup && rclone sync /mnt/gros_disque/data/backups proton_drive:/immich/db_backup && rclone sync /mnt/gros_disque/data/library proton_drive:/immich/library && rclone sync /mnt/gros_disque/data/profile proton_drive:/immich/profile && rclone sync /mnt/gros_disque/data/upload proton_drive:/immich/upload"
    state: present